version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/venv  # Exclude virtual environment from volume mounting
      - /app/__pycache__  # Exclude Python cache
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - MONGO_URI=${MONGO_URI:-mongodb+srv://yogeshramakrishnan:pnSCE8RtcPqPetdV@cluster0.qar08.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0}
      - DB_NAME=${DB_NAME:-sms_db_dev}
      - SECRET_KEY=${SECRET_KEY:-7f3d8a9b2e1c6f4a8d7b3e9c1f5a2d8b6e4c7f9a1d3b8e5c2f7a4d9b6e1c3f8}
      - CORS_ALLOWED_ORIGINS=http://localhost:5713,http://127.0.0.1:5713,http://localhost:3000,http://127.0.0.1:3000
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - dev-network

  mongodb:
    image: mongo:7-jammy
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${DB_NAME:-sms_db_dev}
    networks:
      - dev-network

  # Optional: MongoDB Admin UI for development
  mongo-express:
    image: mongo-express:1-20-alpine3.18
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongodb:27017/
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongodb
    networks:
      - dev-network

volumes:
  mongodb_dev_data:

networks:
  dev-network:
    driver: bridge
