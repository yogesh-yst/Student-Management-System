version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=wsgi.py
      - FLASK_ENV=production
      - MONGO_URI=${MONGO_URI}
      - DB_NAME=${DB_NAME:-sms_db}
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://uzbkpr7qm5.us-east-2.awsapprunner.com}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - prod-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Local MongoDB for production (if not using cloud service)
  # Uncomment if you want to use local MongoDB instead of MongoDB Atlas
  # mongodb:
  #   image: mongo:7-jammy
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_prod_data:/data/db
  #     - ./docker/mongo-init-prod.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
  #     - MONGO_INITDB_DATABASE=${DB_NAME:-sms_db}
  #   restart: unless-stopped
  #   networks:
  #     - prod-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # Optional: Nginx reverse proxy for production
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./docker/ssl:/etc/ssl/certs:ro
  #   depends_on:
  #     - web
  #   restart: unless-stopped
  #   networks:
  #     - prod-network

volumes:
  mongodb_prod_data:

networks:
  prod-network:
    driver: bridge
