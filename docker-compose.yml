version: '3.8'

services:
  # Frontend service
  mms-frontend:
    build:
      context: ./frontend/mms-frontend
      target: development
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/mms-frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5000
    command: npm run dev -- --host
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mms-network
    restart: unless-stopped

  # Frontend production build
  mms-frontend-prod:
    build:
      context: ./frontend/mms-frontend
      target: production
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mms-network
    restart: unless-stopped
    profiles:
      - production

  # Backend service
  backend:
    build: 
      context: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - MONGO_URI=${MONGO_URI:-mongodb://mongodb:27017/}
      - DB_NAME=${DB_NAME:-student_management}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
    networks:
      - mms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      mongodb:
        condition: service_healthy

  # MongoDB service (optional - remove if using MongoDB Atlas)
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - MONGO_INITDB_DATABASE=${DB_NAME:-student_management}
    networks:
      - mms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles:
      - with-mongo

networks:
  mms-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  node_modules:
